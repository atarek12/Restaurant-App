{"version":3,"sources":["Components/Form.js","Components/ListEdit.js","Components/ListItem.js","Components/List.js","App.js","serviceWorker.js","index.js"],"names":["Form","state","orderName","orderTime","orderNotes","typing","e","setState","target","name","value","addOrderItem","preventDefault","props","addOrdertoList","className","onSubmit","this","required","onChange","disabled","selected","hidden","type","placeholder","rows","cols","Component","ListEdit","handleDelete","deleteOrder","orderId","handleEdit","EditOrder","onClick","updated","noteClass","expanded","ListItem","Editable","order","orderItem","time","note","updateOrder","typing1","typing2","typing3","expandNote","RenderUpdate","id","colSpan","RenderEdit","List","orderList","orders","map","index","key","newId","App","Details","newOrder","filter","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8OAEqBA,E,4MAGjBC,MAAQ,CACJC,UAAW,GACXC,UAAW,GACXC,WAAY,I,EAIhBC,OAAS,SAACC,GACN,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAKlCC,aAAe,SAACL,GACZA,EAAEM,iBACF,EAAKC,MAAMC,eAAe,EAAKb,Q,uDAI/B,OACI,0BAAMc,UAAU,OAAOC,SAAUC,KAAKN,cAElC,4BAAQI,UAAU,QAAQN,KAAK,YAAYS,UAAQ,EAACC,SAAUF,KAAKZ,QAC/D,4BAAQK,MAAM,GAAGU,UAAQ,EAACC,UAAQ,EAACC,QAAM,GAAzC,eACA,4BAAQZ,MAAM,aAAd,aACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,UAGJ,2BAAOK,UAAU,QAAQQ,KAAK,OAAOL,UAAQ,EAACT,KAAK,YAAYU,SAAUF,KAAKZ,SAE9E,2BAAOU,UAAU,SAASQ,KAAK,SAASb,MAAM,cAE9C,6BAEA,8BAAUK,UAAU,QAAQQ,KAAK,OAAOL,UAAQ,EAACM,YAAY,iBAAiBC,KAAK,IAAIC,KAAK,KAAKjB,KAAK,aAAaU,SAAUF,KAAKZ,c,GA3ChHsB,aCAbC,E,4MAEjBC,aAAe,WACX,EAAKhB,MAAMiB,YAAY,EAAKjB,MAAMkB,U,EAGtCC,WAAa,WACT,EAAKnB,MAAMoB,UAAU,EAAKpB,MAAMkB,U,uDAIhC,OACI,kBAAC,WAAD,KACI,4BAAQhB,UAAU,aAAamB,QAASjB,KAAKe,YAA7C,QACA,4BAAQjB,UAAU,aAAamB,QAASjB,KAAKY,cAA7C,e,GAdsBF,aCClCQ,GAAU,EACVC,EAAY,QACZC,GAAW,EAEMC,E,4MAEjBrC,MAAQ,CACJsC,UAAU,EACVC,MAAO,CACHtC,UAAW,EAAKW,MAAM4B,UAAUhC,KAChCN,UAAW,EAAKU,MAAM4B,UAAUC,KAChCtC,WAAY,EAAKS,MAAM4B,UAAUE,O,EAKzCV,UAAY,WACR,EAAK1B,SAAS,CACVgC,UAAU,K,EAKlBK,YAAc,WACV,EAAKrC,SAAS,CACVgC,UAAU,IAEdJ,GAAU,G,EAIdU,QAAU,SAACvC,GACP,EAAKC,SAAS,CACVgC,SAAU,EAAKtC,MAAMsC,SACrBC,MAAO,CACHtC,UAAWI,EAAEE,OAAOE,MACpBP,UAAW,EAAKF,MAAMuC,MAAMrC,UAC5BC,WAAY,EAAKH,MAAMuC,MAAMpC,e,EAMzC0C,QAAU,SAACxC,GACP,EAAKC,SAAS,CACVgC,SAAU,EAAKtC,MAAMsC,SACrBC,MAAO,CACHtC,UAAW,EAAKD,MAAMuC,MAAMtC,UAC5BC,UAAWG,EAAEE,OAAOE,MACpBN,WAAY,EAAKH,MAAMuC,MAAMpC,e,EAMzC2C,QAAU,SAACzC,GACP,EAAKC,SAAS,CACVgC,SAAU,EAAKtC,MAAMsC,SACrBC,MAAO,CACHtC,UAAW,EAAKD,MAAMuC,MAAMtC,UAC5BC,UAAW,EAAKF,MAAMuC,MAAMrC,UAC5BC,WAAYE,EAAEE,OAAOE,U,EAMjCsC,WAAa,YACQ,IAAbX,GACAD,EAAY,eACZC,GAAW,IAEXD,EAAY,SACZC,GAAW,GAEf,EAAK9B,SAAS,CACVgC,SAAU,EAAKtC,MAAMsC,SACrBC,MAAO,CACHtC,UAAW,EAAKD,MAAMuC,MAAMtC,UAC5BC,UAAW,EAAKF,MAAMuC,MAAMrC,UAC5BC,WAAY,EAAKH,MAAMuC,MAAMpC,e,EAMzC6C,aAAe,WACX,OAAId,GACAA,GAAU,EAEN,kBAAC,WAAD,KACI,wBAAIpB,UAAU,YACV,wBAAImB,QAAS,EAAKc,YAAlB,IAAgC,EAAKnC,MAAM4B,UAAUS,GAArD,KACA,wBAAIhB,QAAS,EAAKc,YAAlB,IAAgC,EAAK/C,MAAMuC,MAAMtC,UAAjD,KACA,wBAAIgC,QAAS,EAAKc,YAAlB,IAAgC,EAAK/C,MAAMuC,MAAMrC,UAAjD,KACA,0BAAMY,UAAU,kBAAhB,IAAmC,kBAAC,EAAD,CAAUgB,QAAS,EAAKlB,MAAMkB,QAASD,YAAa,EAAKjB,MAAMiB,YAAaG,UAAW,EAAKA,YAA/H,MAEJ,4BACI,wBAAIlB,UAAU,QAAQoC,QAAQ,KAA9B,IAAoC,EAAKlD,MAAMuC,MAAMpC,WAArD,QAOR,kBAAC,WAAD,KACI,wBAAIW,UAAU,YACV,wBAAImB,QAAS,EAAKc,YAAlB,IAAgC,EAAKnC,MAAM4B,UAAUS,GAArD,KACA,wBAAIhB,QAAS,EAAKc,YAAlB,IAAgC,EAAKnC,MAAM4B,UAAUhC,KAArD,KACA,wBAAIyB,QAAS,EAAKc,YAAlB,IAAgC,EAAKnC,MAAM4B,UAAUC,KAArD,KACA,0BAAM3B,UAAU,kBAAhB,IAAmC,kBAAC,EAAD,CAAUgB,QAAS,EAAKlB,MAAMkB,QAASD,YAAa,EAAKjB,MAAMiB,YAAaG,UAAW,EAAKA,YAA/H,MAGJ,4BACI,wBAAIlB,UAAWqB,EAAWe,QAAQ,KAAK,EAAKlD,MAAMuC,MAAMpC,e,EAQ5EgD,WAAa,WACT,OACI,kBAAC,WAAD,KACI,wBAAIrC,UAAU,YACV,gCAAM,EAAKF,MAAM4B,UAAUS,GAA3B,KAEA,4BACI,4BAAQnC,UAAU,QAAQN,KAAK,YAAYS,UAAQ,EAACC,SAAU,EAAK0B,SAC/D,4BAAQnC,MAAM,GAAGU,UAAQ,EAACC,UAAQ,EAACC,QAAM,GAAzC,IAA6C,EAAKT,MAAM4B,UAAUhC,KAAlE,KACA,4BAAQC,MAAM,aAAd,aACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,WAIR,4BACI,2BAAOK,UAAU,QAAQQ,KAAK,OAAOL,UAAQ,EAACR,MAAO,EAAKT,MAAMuC,MAAMrC,UAAWM,KAAK,YAAYU,SAAU,EAAK2B,WAGrH,4BAAI,2BAAO/B,UAAU,SAASQ,KAAK,SAASb,MAAM,eAAewB,QAAS,EAAKU,gBAGnF,4BACI,wBAAIO,QAAQ,KAAZ,IAAiB,8BAAUpC,UAAU,iBAAiBQ,KAAK,OAAOL,UAAQ,EAACR,MAAO,EAAKT,MAAMuC,MAAMpC,WAAYqB,KAAK,IAAIC,KAAK,KAAKjB,KAAK,aAAaU,SAAU,EAAK4B,UAAnK,Q,uDAQZ,OACI,kBAAC,WAAD,KACK9B,KAAKhB,MAAMsC,SAAWtB,KAAKmC,aAAenC,KAAKgC,oB,GA3J1BtB,aCHjB0B,E,uKAGP,IAAD,OAECC,EAAYrC,KAAKJ,MAAM0C,OAAOC,KAAI,SAAChB,EAAOiB,GAC5C,OAAO,kBAAC,EAAD,CAAUhB,UAAWD,EAAOkB,IAAKD,EAAO1B,QAASS,EAAMU,GAAIpB,YAAa,EAAKjB,MAAMiB,iBAG9F,OACI,2BAAOoB,GAAG,QACN,2BAAOA,GAAG,aACN,4BACI,wBAAInC,UAAU,WAAd,YACA,wBAAIA,UAAU,WAAd,cACA,wBAAIA,UAAU,WAAd,cACA,+BAGR,+BACKuC,Q,GApBa3B,aCC9BgC,G,MAAQ,GAESC,E,4MAEnB3D,MAAQ,CACNsD,OAAQ,CACN,CACEL,GAAI,EACJzC,KAAM,YACNiC,KAAM,QACNC,KAAM,gDAER,CACEO,GAAI,EACJzC,KAAM,QACNiC,KAAM,QACNC,KAAM,uC,EAMZ7B,eAAiB,SAAC+C,GAKhB,IAAMC,EAAW,CACfZ,KAJFS,EAKElD,KAAMoD,EAAQ3D,UACdwC,KAAMmB,EAAQ1D,UACdwC,KAAMkB,EAAQzD,YAIhB,EAAKG,SAAS,CACZgD,OAAO,GAAD,mBAAM,EAAKtD,MAAMsD,QAAjB,CAAyBO,O,EAKnChC,YAAc,SAACC,GAEb,EAAKxB,SAAS,CACZgD,OAAO,YAAK,EAAKtD,MAAMsD,OAAOQ,QAAO,SAAAvB,GAAK,OAAIA,EAAMU,KAAOnB,S,uDAK7D,OACE,yBAAKhB,UAAU,aACb,wBAAIA,UAAU,SAAd,2BACA,kBAAC,EAAD,CAAMA,UAAU,OAAOD,eAAgBG,KAAKH,iBAC5C,kBAAC,EAAD,CAAMC,UAAU,OAAOwC,OAAQtC,KAAKhB,MAAMsD,OAAQzB,YAAab,KAAKa,mB,GAnD3CH,aCK3BqC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9E,QACfwE,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MC1FjEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDYnB,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,GAAwB7B,OAAOC,SAAS6B,MACpDC,SAAW/B,OAAOC,SAAS8B,OAIvC,OAGF/B,OAAOgC,iBAAiB,QAAQ,WAC9B,IAAM3B,EAAK,UAAMwB,GAAN,sBAEP/B,IAgEV,SAAiCO,EAAOC,GAEtC2B,MAAM5B,EAAO,CACX6B,QAAS,CAAE,iBAAkB,YAE5BxB,MAAK,SAAAyB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM9B,MAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,MAAK,WAC7BV,OAAOC,SAASyC,eAKpBtC,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEAvFAyB,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM9B,MAAK,WACjCO,QAAQC,IACN,iHAMJd,EAAgBC,EAAOC,OClC/BE,I","file":"static/js/main.c1d3ee54.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Form extends Component {\r\n\r\n    //state to hold current information\r\n    state = {\r\n        orderName: '',\r\n        orderTime: '',\r\n        orderNotes: ''\r\n    }\r\n\r\n    //function to handle typing in each input\r\n    typing = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value             // Good Trick--> badal ma a3mel function le kol input\r\n        })\r\n    }\r\n\r\n    //function call the parent App to add order item to list\r\n    addOrderItem = (e) => {\r\n        e.preventDefault()\r\n        this.props.addOrdertoList(this.state)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"form\" onSubmit={this.addOrderItem} >\r\n\r\n                <select className=\"input\" name=\"orderName\" required onChange={this.typing} >\r\n                    <option value=\"\" disabled selected hidden >Chose Order</option>\r\n                    <option value=\"sandwitch\">Sandwitch</option>\r\n                    <option value=\"pizza\">Pizza</option>\r\n                    <option value=\"pasta\">Pasta</option>\r\n                    <option value=\"salads\">Salads</option>\r\n                    <option value=\"pie\">Pie</option>\r\n                    <option value=\"cake\">Cake</option>\r\n                    <option value=\"juice\">Juice</option>\r\n                </select>\r\n\r\n                <input className=\"input\" type=\"time\" required name=\"orderTime\" onChange={this.typing} />\r\n\r\n                <input className=\"button\" type=\"submit\" value=\"Add Order\" />\r\n\r\n                <br />\r\n\r\n                <textarea className=\"input\" type=\"text\" required placeholder=\"Add Some Notes\" rows=\"4\" cols=\"50\" name=\"orderNotes\" onChange={this.typing} />\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\n\r\nexport default class ListEdit extends Component {\r\n\r\n    handleDelete = () => {\r\n        this.props.deleteOrder(this.props.orderId)\r\n    }\r\n\r\n    handleEdit = () => {\r\n        this.props.EditOrder(this.props.orderId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <button className=\"listButton\" onClick={this.handleEdit} >Edit</button>\r\n                <button className=\"listButton\" onClick={this.handleDelete} >Delete</button>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\nimport ListEdit from './ListEdit'\r\n\r\nlet updated = false;\r\nlet noteClass = 'notes';\r\nlet expanded = false\r\n\r\nexport default class ListItem extends Component {\r\n\r\n    state = {\r\n        Editable: false,\r\n        order: {\r\n            orderName: this.props.orderItem.name,\r\n            orderTime: this.props.orderItem.time,\r\n            orderNotes: this.props.orderItem.note\r\n        }\r\n    }\r\n\r\n    // change state of a row so we can edit\r\n    EditOrder = () => {\r\n        this.setState({\r\n            Editable: true\r\n        })\r\n    }\r\n\r\n    // change state of a row to be read only\r\n    updateOrder = () => {\r\n        this.setState({\r\n            Editable: false\r\n        })\r\n        updated = true;\r\n    }\r\n\r\n    //handle event while editing order type\r\n    typing1 = (e) => {\r\n        this.setState({\r\n            Editable: this.state.Editable,\r\n            order: {\r\n                orderName: e.target.value,\r\n                orderTime: this.state.order.orderTime,\r\n                orderNotes: this.state.order.orderNotes\r\n            }\r\n        })\r\n    }\r\n\r\n    //handle event while editing order time\r\n    typing2 = (e) => {\r\n        this.setState({\r\n            Editable: this.state.Editable,\r\n            order: {\r\n                orderName: this.state.order.orderName,\r\n                orderTime: e.target.value,\r\n                orderNotes: this.state.order.orderNotes\r\n            }\r\n        })\r\n    }\r\n\r\n    //handle event while editing order notes\r\n    typing3 = (e) => {\r\n        this.setState({\r\n            Editable: this.state.Editable,\r\n            order: {\r\n                orderName: this.state.order.orderName,\r\n                orderTime: this.state.order.orderTime,\r\n                orderNotes: e.target.value\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    expandNote = () => {\r\n        if (expanded === false) {\r\n            noteClass = \"notes active\"\r\n            expanded = true\r\n        } else {\r\n            noteClass = \"notes \"\r\n            expanded = false\r\n        }\r\n        this.setState({\r\n            Editable: this.state.Editable,\r\n            order: {\r\n                orderName: this.state.order.orderName,\r\n                orderTime: this.state.order.orderTime,\r\n                orderNotes: this.state.order.orderNotes\r\n            }\r\n        })\r\n    }\r\n\r\n    //show readable data\r\n    RenderUpdate = () => {\r\n        if (updated) {\r\n            updated = false;\r\n            return (\r\n                <Fragment>\r\n                    <tr className=\"tableRow\">\r\n                        <td onClick={this.expandNote}> {this.props.orderItem.id} </td>\r\n                        <td onClick={this.expandNote}> {this.state.order.orderName} </td>\r\n                        <td onClick={this.expandNote}> {this.state.order.orderTime} </td>\r\n                        <span className=\"editButtonsCol\" > <ListEdit orderId={this.props.orderId} deleteOrder={this.props.deleteOrder} EditOrder={this.EditOrder} /> </span>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"notes\" colSpan=\"3\"> {this.state.order.orderNotes} </td>\r\n                    </tr>\r\n                </Fragment>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <Fragment>\r\n                    <tr className=\"tableRow\">\r\n                        <td onClick={this.expandNote}> {this.props.orderItem.id} </td>\r\n                        <td onClick={this.expandNote}> {this.props.orderItem.name} </td>\r\n                        <td onClick={this.expandNote}> {this.props.orderItem.time} </td>\r\n                        <span className=\"editButtonsCol\" > <ListEdit orderId={this.props.orderId} deleteOrder={this.props.deleteOrder} EditOrder={this.EditOrder} /> </span>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td className={noteClass} colSpan=\"3\">{this.state.order.orderNotes}</td>\r\n                    </tr>\r\n                </Fragment >\r\n            )\r\n        }\r\n    }\r\n\r\n    // open editable form\r\n    RenderEdit = () => {\r\n        return (\r\n            <Fragment>\r\n                <tr className=\"tableRow\">\r\n                    <td> {this.props.orderItem.id} </td>\r\n\r\n                    <td>\r\n                        <select className=\"input\" name=\"orderName\" required onChange={this.typing1}  >\r\n                            <option value=\"\" disabled selected hidden > {this.props.orderItem.name} </option>\r\n                            <option value=\"sandwitch\">Sandwitch</option>\r\n                            <option value=\"pizza\">Pizza</option>\r\n                            <option value=\"pasta\">Pasta</option>\r\n                            <option value=\"salads\">Salads</option>\r\n                            <option value=\"pie\">Pie</option>\r\n                            <option value=\"cake\">Cake</option>\r\n                            <option value=\"juice\">Juice</option>\r\n                        </select>\r\n                    </td>\r\n\r\n                    <td>\r\n                        <input className=\"input\" type=\"time\" required value={this.state.order.orderTime} name=\"orderTime\" onChange={this.typing2} />\r\n                    </td>\r\n\r\n                    <td><input className=\"button\" type=\"submit\" value=\"Update Order\" onClick={this.updateOrder} /></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td colSpan=\"3\"> <textarea className=\"input editNote\" type=\"text\" required value={this.state.order.orderNotes} rows=\"4\" cols=\"50\" name=\"orderNotes\" onChange={this.typing3} /> </td>\r\n                </tr>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                {this.state.Editable ? this.RenderEdit() : this.RenderUpdate()}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ListItem from './ListItem'\r\n\r\n\r\nexport default class List extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        const orderList = this.props.orders.map((order, index) => {\r\n            return <ListItem orderItem={order} key={index} orderId={order.id} deleteOrder={this.props.deleteOrder} />\r\n        })\r\n\r\n        return (\r\n            <table id=\"list\">\r\n                <thead id=\"tablehead\" >\r\n                    <tr>\r\n                        <th className=\"colHead\" >Order ID</th>\r\n                        <th className=\"colHead\" >Order Type</th>\r\n                        <th className=\"colHead\" >Order Time</th>\r\n                        <th ></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {orderList}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport Form from './Components/Form'\nimport List from './Components/List'\nimport './app.css'\n\nlet newId = 2;\n\nexport default class App extends Component {\n\n  state = {\n    orders: [\n      {\n        id: 1,\n        name: 'Sandwitch',\n        time: '03:00',\n        note: 'one sandwitch burger extra chese and ketchup'\n      },\n      {\n        id: 2,\n        name: 'Juice',\n        time: '03:30',\n        note: 'one sandwitch sugage with ketchup'\n      }\n    ]\n  }\n\n  //Add Order Function\n  addOrdertoList = (Details) => {\n    // Get newID\n    newId++;\n\n    //Add newOrder to an object\n    const newOrder = {\n      id: newId,\n      name: Details.orderName,\n      time: Details.orderTime,\n      note: Details.orderNotes\n    }\n\n    //add this object to orders state\n    this.setState({\n      orders: [...this.state.orders, newOrder]       //good trick using the spread oberator which select all state and add newOrder to them\n    })\n  }\n\n  //delete an order\n  deleteOrder = (orderId) => {\n\n    this.setState({\n      orders: [...this.state.orders.filter(order => order.id !== orderId)]    //delete the specified order id\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"title\" >Orders Mangement Center</h1>\n        <Form className=\"form\" addOrdertoList={this.addOrdertoList} />\n        <List className=\"list\" orders={this.state.orders} deleteOrder={this.deleteOrder} />\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}